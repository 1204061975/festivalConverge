<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.fc.mapper.ArticleMapper">
		 
  	<select id="findArticleByTime"  parameterType="cn.fc.entity.Article" resultType="cn.fc.entity.Article">
  		select articleid,title,category_name,user_id,content,summary,publish_time,count,username,sys_category_id
  		from article as a 
  		left join user u on a.user_id=u.id 
  		left join  sys_category sc on a.sys_category_id=sc.id
  		order by publish_time desc 
  		limit #{start},#{pageSize}
  	
  	</select>
	<!-- 查询结果的总记录数 -->
	<select id="getCount1" resultType="java.lang.Long">
		select count(articleid) from article
	</select>
	<select id="findArticleByCount1" resultType="cn.fc.entity.Article">
		SELECT * FROM article order by count desc limit 0,3
	</select>
	<select id="findArticleByCount2" resultType="cn.fc.entity.Article">
		SELECT * FROM article order by count desc limit 0,5
	</select>
	<select id="findArticleById" parameterType="java.lang.Integer" resultType="cn.fc.entity.Article">
		select articleid, title,user_id,content,summary,publish_time,count,username
  		from article as a 
  		left join user u on a.user_id=u.id  
  		where articleid=#{articleid}
	</select>
	<update id="updateArticleCountById" parameterType="java.lang.Integer">
		update article SET count=count+1 WHERE articleid=#{articleid}
	</update>
	
	<select id="findArticleByScid"  parameterType="cn.fc.entity.Article"  resultType="cn.fc.entity.Article">
  		SELECT articleid ,title ,category_name ,username ,user_id, sys_category_id,summary,publish_time,count
  		FROM article as a 
  		left join user u on a.user_id=u.id 
  		left join  sys_category sc on a.sys_category_id=sc.id 
  		where sys_category_id =#{sys_category_id}
  		order by publish_time desc 
  		limit #{start},#{pageSize}
  	</select>	
  	
  	<select id="getCount2" parameterType="cn.fc.entity.Article" resultType="java.lang.Long">
		select count(articleid) from article where sys_category_id =#{sys_category_id}
	</select>
  	
  	<insert id="addArticleByUserid" parameterType="cn.fc.entity.Article">
  		insert into article(title,user_id,sys_category_id,summary,content) values(#{title},#{user_id},#{sys_category_id},#{summary},#{content})
  	</insert>
  	<update id="upArticleByArticleid" parameterType="cn.fc.entity.Article">
  		update article set title=#{title} ,user_id=#{user_id},sys_category_id=#{sys_category_id},summary=#{summary},content=#{content}
  		 where articleid =#{articleid} ;
  	</update>
  	<select id="findArticleByKeyword" parameterType="java.lang.Object" resultType="cn.fc.entity.Article">
  		SELECT articleid ,title ,category_name ,username ,user_id, sys_category_id,summary,publish_time,count
  		FROM article as a 
  		left join user u on a.user_id=u.id 
  		left join  sys_category sc on a.sys_category_id=sc.id 
  		where concat(title,content,summary) like concat(concat('%',#{keyword}),'%')
  		order by publish_time desc 
  		limit #{start},#{pageSize}
  	</select>
  	<select id="getCount3" parameterType="java.lang.String" resultType="java.lang.Long">
		select count(articleid) from article where concat(title,content,summary) like concat(concat('%',#{keyword}),'%')
	</select>
	<select id="findArticleByUserid"  parameterType="cn.fc.entity.Article"  resultType="cn.fc.entity.Article">
  		SELECT articleid ,title ,category_name ,username ,user_id, sys_category_id,summary,publish_time,count
  		FROM article as a 
  		left join user u on a.user_id=u.id 
  		left join  sys_category sc on a.sys_category_id=sc.id 
  		where user_id =#{user_id}
  		order by publish_time desc 
  		limit #{start},#{pageSize}
  	</select>
  	<select id="getCount4" parameterType="java.lang.Integer" resultType="java.lang.Long">
		select count(articleid) from article where user_id =#{user_id}
	</select>
	
	<delete id="delArticleByArticleid" parameterType="java.lang.Integer">
  	 	delete from article where articleid=#{articleid}
  	 </delete>
</mapper>
